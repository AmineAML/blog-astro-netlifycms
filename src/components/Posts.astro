---
	import Default from './Default.svelte';
	import { apiUrl } from '../lib/variables.js';

	// const response = await fetch(`${apiUrl}/topics`);
	// const data = await response.json();

	// const responseArt = await fetch(`${apiUrl}/articles`);
	// const dataArt = await responseArt.json();

	// export let collection: any

	// const { collection } = Astro.props

	// export async function createCollection() {
	// 	return {
	// 		/** Load posts, sort newest -> oldest */
	// 		async data() {
	// 			const allPosts = Astro.fetchContent('./posts/*.md')
	// 			return allPosts//.sort((a, b) => new Date(b.date) - new Date(a.date))
	// 		},

	// 		/** Set page size */
	// 		pageSize: 10,
	// 	}
	// }
 
	// const posts = await Astro.glob('/src/pages/posts/.*md');

	const posts = (await Astro.glob('/src/pages/posts/*.md')).filter(post => post.frontmatter.title != 'HIDE_DEFAULT_ARTICLE').map(post => post.frontmatter).sort((a, b) => (new Date(b.date) as any) - (new Date(a.date) as any));

	const topics = (await Astro.glob('/src/lib/other/topics/*.md')).map(topic => topic.frontmatter);

	console.log(posts)
	console.log('reee', topics)
---

<main class="container mx-auto px-4 max-w-xl">
	<!-- Enabling JavaScript on the component doesn't seem to work and throws a 'destructured parameter is undefined' error, to make it work then we might need to update the svelte adapter and even whole astro framework version -->
	<!-- <Default data={[{ name: 'all' },...topics]} dataArt={posts} dataArtAsCopy={posts} client:load /> -->
	<Default data={[{ name: 'all' },...topics]} dataArt={posts} dataArtAsCopy={posts} client:load />
</main>